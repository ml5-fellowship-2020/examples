{"version":3,"sources":["images sync /^/.//.*$","images/coco-ssd-advanced.png","images/word2vec-advanced.png","ExampleCard/ExampleCard.js","App.js","serviceWorker.js","index.js","images/ml5_logo.png","images/placeholder-image.png"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","placeholder","require","TAG_COLORS","FaceAPI","FeatureExtractor","ImageClassifier","KNNClassifier","NeuralNetwork","PitchDetection","PoseNet","TeachableMachine","SoundClassifier","UNet","BodyPix","Word2Vec","objectDetector","ExampleCard","example","name","description","image","url","category","model","Meta","Card","xs","span","offset","md","lg","xl","onClick","openLink","hoverable","style","width","cover","src","length","alt","height","actions","justify","align","className","PlaySquareOutlined","key","title","catogery","FileImageOutlined","color","VideoCameraOutlined","FileTextOutlined","SoundOutlined","getCategoryIcon","App","Header","Layout","Content","console","log","examples","a","document","createElement","href","target","body","appendChild","click","removeChild","remove","logo","gutter","i","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"yHAAA,IAAIA,EAAM,CACT,0BAA2B,IAC3B,iBAAkB,GAClB,0BAA2B,GAC3B,0BAA2B,KAI5B,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,K,oBCzBpBU,EAAOC,QAAU,IAA0B,+C,oBCA3CD,EAAOC,QAAU,IAA0B,+C,yLCcrCC,EAAcC,EAAQ,IAEtBC,EAAa,CACjBC,QAAS,UACTC,iBAAkB,SAClBC,gBAAiB,QACjBC,cAAe,OACfC,cAAe,OACfC,eAAgB,UAChBC,QAAS,OACTC,iBAAkB,WAClBC,gBAAiB,SACjBC,KAAM,MACNC,QAAS,UACTC,SAAU,UACVC,eAAgB,cA4DHC,EAzDK,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACbC,EAAmDD,EAAnDC,KAAMC,EAA6CF,EAA7CE,YAAaC,EAAgCH,EAAhCG,MAAOC,EAAyBJ,EAAzBI,IAAKC,EAAoBL,EAApBK,SAAUC,EAAUN,EAAVM,MACzCC,EAASC,IAATD,KAeR,OACE,kBAAC,IAAD,CACEE,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GACxBC,GAAI,CAAEF,KAAM,GAAIC,OAAQ,GACxBE,GAAI,CAAEH,KAAM,EAAGC,OAAQ,GACvBG,GAAI,CAAEJ,KAAM,EAAGC,OAAQ,GACvBI,QAAS,kBAAMC,EAASZ,KAExB,kBAAC,IAAD,CACEa,WAAS,EACTC,MAAO,CAAEC,MAAO,KAChBC,MACE,yBACEC,IAAKlB,EAAMmB,OAAS,EAAItC,OAAQ,YAAamB,IAAWpB,EACxDwC,IAAKtB,EACLkB,MAAO,IACPK,OAAQ,MAGZC,QAAS,CACP,kBAAC,IAAD,CAAKC,QAAQ,SAASC,MAAM,UAC1B,yBAAKC,UAAU,eAAf,uBACA,kBAACC,EAAA,EAAD,CAAoBC,IAAI,OAAOF,UAAU,iBAI7C,kBAACrB,EAAD,CACEwB,MACE,yBAAKH,UAAU,QA1CD,SAACI,GACvB,OAAQA,GACN,IAAK,QACH,OAAO,kBAACC,EAAA,EAAD,CAAmBf,MAAO,CAAEgB,MAAO,aAC5C,IAAK,QACH,OAAO,kBAACC,EAAA,EAAD,CAAqBjB,MAAO,CAAEgB,MAAO,aAC9C,IAAK,OACH,OAAO,kBAACE,EAAA,EAAD,CAAkBlB,MAAO,CAAEgB,MAAO,aAC3C,IAAK,QACH,OAAO,kBAACG,EAAA,EAAD,CAAenB,MAAO,CAAEgB,MAAO,aACxC,QACE,QAgCOI,CAAgBjC,GADnB,IAC+BJ,GAGjCC,YAAa,yBAAK0B,UAAU,eAAe1B,KAE7C,kBAAC,IAAD,CAAKgC,MAAOjD,EAAWqB,IAASA,M,yBC9BzBiC,MAlCf,WAAgB,IACNC,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAEhB,OADAC,QAAQC,IAAI,aAAcC,GAExB,kBAAC,IAAD,KACE,kBAACL,EAAD,CAAQZ,UAAU,cAEhB,wBACEA,UAAU,YACVb,QAAS,kBAnBK,SAACX,GACvB,IAAM0C,EAAIC,SAASC,cAAc,KACjCF,EAAEG,KAAO7C,EACT0C,EAAEI,OAAS,SACXH,SAASI,KAAKC,YAAYN,GAC1BA,EAAEO,QACFN,SAASI,KAAKG,YAAYR,GAC1BA,EAAES,SAYqBvC,CAAS,wBAExB,yBAAKK,IAAKmC,IAAM5B,UAAU,WAAWL,IAAI,WAG7C,kBAACmB,EAAD,CAASd,UAAU,eACjB,yBAAKA,UAAU,gBACb,4CACA,8GAEc,6BAFd,kFAOF,kBAAC,IAAD,CAAKA,UAAU,qBAAqB6B,OAAQ,CAAC,GAAI,KAC9CZ,EAAS7E,KAAI,SAACgC,EAAS0D,GAAV,OACZ,kBAAC,EAAD,CAAa5B,IAAG,eAAU4B,GAAK1D,QAASA,WCjChC2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFnB,SAASoB,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhC,QAAQgC,MAAMA,EAAMC,a,mBEzI5B/F,EAAOC,QAAU,IAA0B,sC,usKCA3CD,EAAOC,QAAU,IAA0B,+C","file":"static/js/main.295ea740.chunk.js","sourcesContent":["var map = {\n\t\"./coco-ssd-advanced.png\": 110,\n\t\"./ml5_logo.png\": 25,\n\t\"./placeholder-image.png\": 28,\n\t\"./word2vec-advanced.png\": 111\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 109;","module.exports = __webpack_public_path__ + \"static/media/coco-ssd-advanced.f30725d2.png\";","module.exports = __webpack_public_path__ + \"static/media/word2vec-advanced.45d82ced.png\";","import \"./ExampleCard.css\";\n\nimport { Card, Col, Row, Tag } from \"antd\";\nimport {\n  FileImageOutlined,\n  FileTextOutlined,\n  PlaySquareOutlined,\n  SoundOutlined,\n  VideoCameraOutlined,\n} from \"@ant-design/icons\";\n\nimport React from \"react\";\nimport openLink from \"../App\";\n\nconst placeholder = require(\"../images/placeholder-image.png\");\n\nconst TAG_COLORS = {\n  FaceAPI: \"magenta\",\n  FeatureExtractor: \"orange\",\n  ImageClassifier: \"green\",\n  KNNClassifier: \"gold\",\n  NeuralNetwork: \"cyan\",\n  PitchDetection: \"volcano\",\n  PoseNet: \"blue\",\n  TeachableMachine: \"geekblue\",\n  SoundClassifier: \"purple\",\n  UNet: \"red\",\n  BodyPix: \"success\",\n  Word2Vec: \"warning\",\n  objectDetector: \"processing\",\n};\n\nconst ExampleCard = ({ example }) => {\n  const { name, description, image, url, category, model } = example;\n  const { Meta } = Card;\n  const getCategoryIcon = (catogery) => {\n    switch (catogery) {\n      case \"image\":\n        return <FileImageOutlined style={{ color: \"#a15ffb\" }} />;\n      case \"video\":\n        return <VideoCameraOutlined style={{ color: \"#a15ffb\" }} />;\n      case \"text\":\n        return <FileTextOutlined style={{ color: \"#a15ffb\" }} />;\n      case \"sound\":\n        return <SoundOutlined style={{ color: \"#a15ffb\" }} />;\n      default:\n        return;\n    }\n  };\n  return (\n    <Col\n      xs={{ span: 24, offset: 1 }}\n      md={{ span: 12, offset: 2 }}\n      lg={{ span: 8, offset: 2 }}\n      xl={{ span: 6, offset: 1 }}\n      onClick={() => openLink(url)}\n    >\n      <Card\n        hoverable\n        style={{ width: 360 }}\n        cover={\n          <img\n            src={image.length > 0 ? require(`../images/${image}`) : placeholder}\n            alt={name}\n            width={360}\n            height={216}\n          />\n        }\n        actions={[\n          <Row justify=\"center\" align=\"middle\">\n            <div className=\"Action-text\">Live Demo with Code</div>\n            <PlaySquareOutlined key=\"play\" className=\"Play-icon\" />\n          </Row>,\n        ]}\n      >\n        <Meta\n          title={\n            <div className=\"Name\">\n              {getCategoryIcon(category)} {name}\n            </div>\n          }\n          description={<div className=\"Description\">{description}</div>}\n        />\n        <Tag color={TAG_COLORS[model]}>{model}</Tag>\n      </Card>\n    </Col>\n  );\n};\n\nexport default ExampleCard;\n","import \"./App.css\";\n\nimport { Layout, Row } from \"antd\";\n\nimport ExampleCard from \"./ExampleCard/ExampleCard\";\nimport React from \"react\";\nimport examples from \"./data/list.json\";\nimport logo from \"./images/ml5_logo.png\";\n\nexport const openLink = (url) => {\n  const a = document.createElement(\"a\");\n  a.href = url;\n  a.target = \"_blank\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  a.remove();\n};\n\nfunction App() {\n  const { Header, Content } = Layout;\n  console.log(\"examples: \", examples);\n  return (\n    <Layout>\n      <Header className=\"App-header\">\n        {/* Title */}\n        <h1\n          className=\"App-title\"\n          onClick={() => openLink(\"https://ml5js.org/\")}\n        >\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </h1>\n      </Header>\n      <Content className=\"App-content\">\n        <div className=\"Project-text\">\n          <h1>ml5 examples</h1>\n          <p>\n            Project description Project description Project description Project\n            description <br /> Project descriptionProject descriptionProject\n            descriptionProject description\n          </p>\n        </div>\n        {/* Cards Container */}\n        <Row className=\"Examples-Container\" gutter={[16, 16]}>\n          {examples.map((example, i) => (\n            <ExampleCard key={`card-${i}`} example={example} />\n          ))}\n        </Row>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ml5_logo.88e082b8.png\";","module.exports = __webpack_public_path__ + \"static/media/placeholder-image.d96eca35.png\";"],"sourceRoot":""}